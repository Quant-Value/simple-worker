name: Build and Push Docker Worker Image
on:
  push:
    branches:
    - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: 'true'
        registry-type: private

    - name: Build Docker image (worker)
      run: |
        docker build -t bluengo-worker -f Dockerfile.worker .
        docker tag bluengo-worker:latest 248189943700.dkr.ecr.eu-west-3.amazonaws.com/my-ecr-repo-dad:worker

    - name: Check if image exists in ECR
      id: check_image
      run: |
        set +e
        IMAGE_EXISTS=$(aws ecr describe-images --repository-name my-ecr-repo-dad --image-ids imageTag=worker)  # Check if the image with 'server' tag exists
        echo "::set-output name=image_exists::$IMAGE_EXISTS"  # Store the result
        set -e
      continue-on-error: true # Don't fail if the image doesn't exist yet

    - name: Push Docker image to ECR (worker)
      run: |
        docker push 248189943700.dkr.ecr.eu-west-3.amazonaws.com/my-ecr-repo-dad:worker 
