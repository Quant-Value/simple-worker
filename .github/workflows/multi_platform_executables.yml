name: Build Executables for Multiple Platforms

on:
  push:
    branches:
    - develop
    tags:
    - 'v*'

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       os: [ linux, windows ] # Sistema operativo
  #       arch: [ amd64, arm64 ] # Arquitectura
  #     fail-fast: false

  #   steps:
  #   - name: Check out repository
  #     uses: actions/checkout@v3

  #   - name: Set up Go
  #     uses: actions/setup-go@v3
  #     with:
  #       go-version: '1.23.6'

  #   - name: Install dependencies (Linux only)
  #     if: matrix.os == 'linux'
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install -y gcc libc6-dev libglib2.0-dev

  #   - name: Build executable for ${{ matrix.os }}-${{ matrix.arch }}
  #     run: |
  #       mkdir -p bluengo-executables  # Create the folder in the workspace
  #       GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o bluengo-executables/bluengo-${{ matrix.os }}-${{ matrix.arch }} .
  #       echo "Built bluengo-${{ matrix.os }}-${{ matrix.arch }}"

  #   - name: Upload the artifact (executables)
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: bluengo-executables-${{ matrix.os }}-${{ matrix.arch }}
  #       path: bluengo-executables/*

  create-release:
    # needs: build
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get previous tag
      id: previoustag
      uses: 'WyriHaximus/github-action-get-previous-tag@v1'

    - name: Debug
      run: export

    - name: Debug previous tag
      run: |
        if [ -z "${{ steps.previoustag.outputs.tag }}" ]; then
          echo "No previous tag found. This might be the first release."
        else
          echo "Previous tag: ${{ steps.previoustag.outputs.tag }}"
        fi

    - name: Get next version
      id: semver
      uses: 'WyriHaximus/github-action-next-semvers@v1'
      with:
        version: ${{ steps.previoustag.outputs.tag }}
        release-type: minor # You can choose 'major', 'minor', or 'patch'

    - name: Set the new version as a tag
      run: |
        git tag ${{ steps.semver.outputs.next-version }}
        git push origin ${{ steps.semver.outputs.next-version }}

    - name: Set up GitHub Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.semver.outputs.next-version }}
        release_name: Release ${{ steps.semver.outputs.next-version }}
        body: "Automated release for version ${{ steps.semver.outputs.next-version }}"
        draft: false
        prerelease: false

    - name: Package the executables into a ZIP file
      run: |
        zip -r bluengo-executables-${{ github.run_id }}.zip bluengo-executables/*

    - name: Upload Executables to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: bluengo-executables-${{ github.run_id }}.zip
        asset_name: bluengo-executables-${{ github.run_id }}.zip
        asset_content_type: application/zip
